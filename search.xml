<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>刷题二</title>
      <link href="2022/02/26/shua-ti-er-2022.2.26/"/>
      <url>2022/02/26/shua-ti-er-2022.2.26/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="刷题—2022-2-26"><a href="#刷题—2022-2-26" class="headerlink" title="刷题—2022-2-26"></a>刷题—2022-2-26</h1><h2 id="题目1-数组"><a href="#题目1-数组" class="headerlink" title="题目1(数组)"></a>题目1(数组)</h2><p>将一个字符串中的空格替换成 “%20”。</p><pre><code>Input:&quot;A B&quot;Output:&quot;A%20B&quot;</code></pre><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>① 在字符串尾部填充任意字符，使得字符串的长度等于替换之后的长度。因为一个空格要替换成三个字符（%20），所以当遍历到一个空格时，需要在尾部填充两个任意字符。</p><p>② 令 P1 指向字符串原来的末尾位置，P2 指向字符串现在的末尾位置。P1 和 P2 从后向前遍历，当 P1 遍历到一个空格时，就需要令 P2 指向的位置依次填充 02%（注意是逆序的），否则就填充上 P1 指向字符的值。从后向前遍是为了在改变 P2 所指向的内容时，不会影响到 P1 遍历原来字符串的内容。</p><p>③ 当 P2 遇到 P1 时（P2 &lt;= P1），或者遍历结束（P1 &lt; 0），退出。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> String <span class="token function">replaceSpace</span><span class="token punctuation">(</span>StringBuffer str<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> P1<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>P1<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span>            str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"  "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> P2<span class="token operator">=</span>str<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>       <span class="token keyword">while</span><span class="token punctuation">(</span>P1<span class="token operator">>=</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>P2<span class="token operator">></span>P1<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c<span class="token operator">=</span>str<span class="token punctuation">.</span><span class="token function">CharAt</span><span class="token punctuation">(</span>P1<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">==</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="题目2-优先队列"><a href="#题目2-优先队列" class="headerlink" title="题目2(优先队列)"></a>题目2(优先队列)</h2><p>如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。</p><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/* 大顶堆，存储左半边元素 */</span><span class="token keyword">private</span> PriorityQueue<span class="token operator">&lt;</span>Integer<span class="token operator">></span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 小顶堆，存储右半边元素，并且右半边元素都大于左半边 */</span><span class="token keyword">private</span> PriorityQueue<span class="token operator">&lt;</span>Integer<span class="token operator">></span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 当前数据流读入的元素个数 */</span><span class="token keyword">private</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">Insert</span><span class="token punctuation">(</span>Integer val<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 插入要保证两个堆存于平衡状态 */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>N <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* N 为偶数的情况下插入到右半边。         * 因为右半边元素都要大于左半边，但是新插入的元素不一定比左半边元素来的大，         * 因此需要先将元素插入左半边，然后利用左半边为大顶堆的特点，取出堆顶元素即为最大元素，此时插入右半边 */</span>        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    N<span class="token operator">++</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">public</span> Double <span class="token function">GetMedian</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>N <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="题目3-数组"><a href="#题目3-数组" class="headerlink" title="题目3(数组)"></a>题目3(数组)</h2><p><img src="https://camo.githubusercontent.com/00a529441d838ba0045ce2b217b6bfcc6b7bfbca85003c0dba5c5d314ab1a351/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303230313130343031303334393239362e706e67" alt="img"></p><p>按顺时针的方向，从外到里打印矩阵的值。下图的矩阵打印结果为：1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10</p><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>一层一层从外到里打印，观察可知每一层打印都有相同的处理步骤，唯一不同的是上下左右的边界不同了。因此使用四个变量 r1, r2, c1, c2 分别存储上下左右边界值，从而定义当前最外层。打印当前最外层的顺序：从左到右打印最上一行-&gt;从上到下打印最右一行-&gt;从右到左打印最下一行-&gt;从下到上打印最左一行。应当注意只有在 r1 != r2 时才打印最下一行，也就是在当前最外层的行数大于 1 时才打印最下一行，这是因为当前最外层只有一行时，继续打印最下一行，会导致重复打印。打印最左一行也要做同样处理。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">printMatrix</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>matrix<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> ret<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> r1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>r2<span class="token operator">=</span>matrix<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>c1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>c2<span class="token operator">=</span>matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>     <span class="token keyword">while</span> <span class="token punctuation">(</span>r1 <span class="token operator">&lt;=</span> r2 <span class="token operator">&amp;&amp;</span> c1 <span class="token operator">&lt;=</span> c2<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 上</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> c1<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> c2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>r1<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 右</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> r1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> r2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>c2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>r1 <span class="token operator">!=</span> r2<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 下</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> c2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> c1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>                ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>r2<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c1 <span class="token operator">!=</span> c2<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 左</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> r2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> r1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>                ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>c1<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        r1<span class="token operator">++</span><span class="token punctuation">;</span> r2<span class="token operator">--</span><span class="token punctuation">;</span> c1<span class="token operator">++</span><span class="token punctuation">;</span> c2<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 牛客刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题一</title>
      <link href="2022/02/25/shua-ti-2022-2-25/"/>
      <url>2022/02/25/shua-ti-2022-2-25/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="刷题—2022-2-25"><a href="#刷题—2022-2-25" class="headerlink" title="刷题—2022-2-25"></a>刷题—2022-2-25</h1><h2 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h2><p>在一个长度为n的数组里所有数字都在0到n-1的范围内。数组中某些数字是重复的，但不知道有几个数字是重复的，也不知道每个数字重复几次。请找出数组中任意一个重复的数字。</p><pre><code>Input:&#123;2, 3, 1, 0, 2, 5&#125;Output:2</code></pre><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>要求时间复杂度O(N),空间复杂度O(1)。因此不能使用排序的方法，也不能使用额外的标记数组。</p><p>对于这种数组元素在[0,n-1]范围内的问题，可以将值为i的元素调整到第i个元素位置上求解。在调整过程中，如果第i位置上已经有一个值为i的元素，就可以知道i值重复。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token keyword">while</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span>i<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>         <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>i<span class="token punctuation">,</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span> t<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h2><p>给定一个二维数组，其每一行从左到右递增排序，从上到下也是递增排序。给定一个数，判断这个数是否在该二维数组中。</p><pre><code>Consider the following matrix:[  [1,   4,  7, 11, 15],  [2,   5,  8, 12, 19],  [3,   6,  9, 16, 22],  [10, 13, 14, 17, 24],  [18, 21, 23, 26, 30]]Given target = 5, return true.Given target = 20, return false.</code></pre><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>要求时间复杂度 O(M + N)，空间复杂度 O(1)。其中 M 为行数，N 为 列数。</p><p>该二维数组中的一个数，小于它的数一定在其左边，大于它的数一定在其下边。因此，从右上角开始查找，就可以根据 target 和当前元素的大小关系来快速地缩小查找区间，每次减少一行或者一列的元素。当前元素的查找区间为左下角的所有元素。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>matrix <span class="token operator">==</span> null <span class="token operator">||</span> matrix<span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">,</span>cols<span class="token operator">=</span>matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> c<span class="token operator">=</span>cols <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>r <span class="token operator">&lt;=</span> rows <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">&amp;&amp;</span> c<span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">==</span>matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">></span> matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>            r<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>             c<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h2><p>输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。</p><p>例如序列 1,2,3,4,5 是某栈的压入顺序，序列 4,5,3,2,1 是该压栈序列对应的一个弹出序列，但 4,3,5,1,2 就不可能是该压栈序列的弹出序列。</p><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>使用一个栈来模拟压入弹出操作。每次入栈一个元素后，都要判断一下栈顶元素是不是当前出栈序列 popSequence 的第一个元素，如果是的话则执行出栈操作并将 popSequence 往后移一位，继续进行判断。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">IsPopOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> pushSequence<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> popSequence<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> pushSequence<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    Stack<span class="token operator">&lt;</span>Integer<span class="token operator">></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> pushIndex<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>popIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> pushIndex <span class="token operator">&lt;</span> n<span class="token punctuation">;</span>pushIndex<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pushSequence<span class="token punctuation">[</span>pushIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>popIndex <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>             stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> popSequence<span class="token punctuation">[</span>popIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            popIndex<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 牛客刷题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC 执行原理</title>
      <link href="2021/05/16/spring-mvc-zhi-xing-yuan-li/"/>
      <url>2021/05/16/spring-mvc-zhi-xing-yuan-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Spring-MVC-执行原理"><a href="#Spring-MVC-执行原理" class="headerlink" title="Spring MVC 执行原理"></a>Spring MVC 执行原理</h1><p><img src="https://study-java.oss-cn-beijing.aliyuncs.com/JAVA/SpringMVC/2020071709495130.png"></p><p><strong>图为SpringMVC的一个较完整的流程图，实线表示SpringMVC框架提供的技术，不需要开发者实现，虚线表示需要开发者实现。</strong></p><p><img src="https://img-blog.csdnimg.cn/20200611074159497.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDMxMTcx,size_16,color_FFFFFF,t_70"></p><ol><li>用户发送请求至前端控制器DispatcherServlet，进行分发处理。</li><li>DispatcherServlet收到请求调用处理器映射器HandlerMapping。</li><li>处理器映射器根据请求url找到具体的处理器，生成处理器执行链HandlerExecutionChain(包括处理器对象和处理器拦截器)一并返回给DispatcherServlet。</li><li>DispatcherServlet根据处理器Handler获取处理器适配器HandlerAdapter执行HandlerAdapter处理一系列的操作，如：参数封装，数据格式转换，数据验证等操作。</li><li>执行处理器Handler(Controller，也叫页面控制器)。</li><li>Handler执行完成返回ModelAndView。</li><li>HandlerAdapter将Handler执行结果ModelAndView返回到DispatcherServlet。</li><li>DispatcherServlet将ModelAndView传给ViewReslover视图解析器。</li><li>ViewReslover解析后返回具体View。</li><li>DispatcherServlet对View进行渲染视图（即将模型数据model填充至视图中）。</li><li>最终DispatcherServlet响应用户。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Spring MVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重庆欢乐谷一日游</title>
      <link href="2021/04/05/chong-qing-huan-le-gu-yi-ri-you/"/>
      <url>2021/04/05/chong-qing-huan-le-gu-yi-ri-you/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="欢乐谷一日游"><a href="#欢乐谷一日游" class="headerlink" title="欢乐谷一日游"></a>欢乐谷一日游</h2><p>前言：如期而至的清明节，如约而至的little team,轻松的踏上happy的欢乐谷之旅。</p><h2 id="游玩照片"><a href="#游玩照片" class="headerlink" title="游玩照片"></a>游玩照片</h2><h3 id="沉重的大摆锤"><a href="#沉重的大摆锤" class="headerlink" title="沉重的大摆锤"></a>沉重的大摆锤</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBc906a1efafa27cee14dd9fe64ffac086?method=download&shareKey=9a955fa4ec829d90a29a8848ec88ff5e"></p><h3 id="摩天轮上的4个靓仔"><a href="#摩天轮上的4个靓仔" class="headerlink" title="摩天轮上的4个靓仔"></a>摩天轮上的4个靓仔</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBf5f4d2c683e239da2d1e34b31b5a852b?method=download&shareKey=30eab2f5640c7f1492263cf9ab983876"><br><img src="https://note.youdao.com/yws/api/personal/file/WEBa9886846520ec619c8c3802cb8e65aca?method=download&shareKey=d6da0d9ee8157c9af2b8a4570017b8e5"></p><h3 id="复古少年"><a href="#复古少年" class="headerlink" title="复古少年"></a>复古少年</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB6876eaa4118ee058ab8dea7ff3b7bb67?method=download&shareKey=0c13e7004e3e67d932484f0c44e9bc07"></p><h3 id="抓拍摩天轮上的lovers"><a href="#抓拍摩天轮上的lovers" class="headerlink" title="抓拍摩天轮上的lovers"></a>抓拍摩天轮上的lovers</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBa915b32c303cb98a117fb96994f29fc2?method=download&shareKey=48482285198e03d294f20bd0bf9325c2"></p><h3 id="激流勇进的瀑布"><a href="#激流勇进的瀑布" class="headerlink" title="激流勇进的瀑布"></a>激流勇进的瀑布</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB50fb023996993effc0c9972a55d33c00?method=download&shareKey=a21767ad6d501c1c45309ebdc800517e"></p><h3 id="夜晚下的重庆之眼"><a href="#夜晚下的重庆之眼" class="headerlink" title="夜晚下的重庆之眼"></a>夜晚下的重庆之眼</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB013cd5e0c19e76e960ef879246fa842c?method=download&shareKey=237043d621803311e1fec5660b0024fd"></p><h3 id="左视图的重庆之眼"><a href="#左视图的重庆之眼" class="headerlink" title="左视图的重庆之眼"></a>左视图的重庆之眼</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB0a8c57f43a1bfeea72f1ac236d11fc60?method=download&shareKey=3aca6db03882a2663e78f10331c47ced"></p><h3 id="夜色下重庆的天空"><a href="#夜色下重庆的天空" class="headerlink" title="夜色下重庆的天空"></a>夜色下重庆的天空</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB5dea9202c6d93bd53b70a2977042c03a?method=download&shareKey=ea0145c934ca98763e4ab3b64ab5d8f5"></p><h3 id="鸟瞰重庆"><a href="#鸟瞰重庆" class="headerlink" title="鸟瞰重庆"></a>鸟瞰重庆</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB30a16853ff746082cf7bba8ff54e9466?method=download&shareKey=a23e6c5d3cc38d998f546db24f232d28"></p><h3 id="抓拍蕾姆"><a href="#抓拍蕾姆" class="headerlink" title="抓拍蕾姆"></a>抓拍蕾姆</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB28de79d4801a2c3df7e00dacd2817dbe?method=download&shareKey=a2625a96c036fff1e76f434d6584e63a"></p><h3 id="模糊少年"><a href="#模糊少年" class="headerlink" title="模糊少年"></a>模糊少年</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBb5830fbf3528064e55fcd3f9ac3a51a1?method=download&shareKey=deffdf968e71f016b927274fdd79714f"></p><h3 id="hansome-少年"><a href="#hansome-少年" class="headerlink" title="hansome 少年"></a>hansome 少年</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB7a6d73336de6646022d8a04be11933eb?method=download&shareKey=800ef2bd5535587a9d9cc5b28eebe429"></p><h3 id="粉红的白鹤"><a href="#粉红的白鹤" class="headerlink" title="粉红的白鹤"></a>粉红的白鹤</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB8359d63749c3765d7da9281c9f246208?method=download&shareKey=1ac96d634abe69e008cc2fd8ffe5b1f2"></p><h3 id="永不服输的6个少年"><a href="#永不服输的6个少年" class="headerlink" title="永不服输的6个少年"></a>永不服输的6个少年</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB6011cd39f70e607628fd2d60d72d4635?method=download&shareKey=535649ebb9389b4efb1c75a7aa3cea4b"></p><h3 id="按摩会所的男模"><a href="#按摩会所的男模" class="headerlink" title="按摩会所的男模"></a>按摩会所的男模</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBbfdc3a243a6d572758378088c9bef646?method=download&shareKey=38db5b5524efa8a43689c575d4fcd191"><br><img src="https://note.youdao.com/yws/api/personal/file/WEB5aa4dae827020d38313562becb04f33d?method=download&shareKey=80f897a37761a3fee9822af14a524fe1"></p><hr><h4 id="NOW-告别放假的热情，准备工作的冷静。"><a href="#NOW-告别放假的热情，准备工作的冷静。" class="headerlink" title="NOW:告别放假的热情，准备工作的冷静。"></a>NOW:告别放假的热情，准备工作的冷静。</h4><h3 id="彩蛋-男的女的折磨-痛苦面具"><a href="#彩蛋-男的女的折磨-痛苦面具" class="headerlink" title="彩蛋 (男的女的折磨 痛苦面具)"></a>彩蛋 (男的女的折磨 痛苦面具)</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB6ea5ae6fe1c7a6b335cd4558bd3dfe0d?method=download&shareKey=3c0e54d79388a474ace806bf01f2a5a6"></p><h3 id="第一次按摩体验"><a href="#第一次按摩体验" class="headerlink" title="第一次按摩体验"></a>第一次按摩体验</h3><div><iframe width="400" height="200" src="//player.bilibili.com/player.html?aid=672393091&bvid=BV15U4y1Y7pn&cid=320128830&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 休闲娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="2021/04/03/wo-de-di-yi-pian-bo-ke/"/>
      <url>2021/04/03/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的第一篇博客"><a href="#我的第一篇博客" class="headerlink" title="我的第一篇博客"></a>我的第一篇博客</h1><p>第一次搭建个人博客，之后还要后续完善，并且分享自己的学习经验和生活,欢迎大家来浏览</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fdik.img.kttpdq.com%2Fpic%2F101%2F70661%2Fadd59b8c29886a2d_1440x900.jpg&refer=http%3A%2F%2Fdik.img.kttpdq.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1620020429&t=7414a3a4bb4f5a3d023e7a1fc9881176"></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello my world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
